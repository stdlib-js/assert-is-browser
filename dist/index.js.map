{
  "version": 3,
  "sources": ["../lib/global_scope.js", "../lib/main.js", "../lib/index.js"],
  "sourcesContent": ["/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// VARIABLES //\n\nvar scope;\n\n\n// FUNCTIONS //\n\n/**\n* Test if the global scope is bound to the \"window\" variable present in browser environments. When creating a new function using the `Function(){}` constructor, the execution scope aliased by the `this` variable is the global scope.\n*\n* @private\n* @returns {boolean} boolean indicating if global scope is bound to \"window\" variable\n*/\nfunction globalScope() {\n\tvar fcn = '';\n\tfcn += 'try {';\n\tfcn += 'return this === window;';\n\tfcn += '} catch ( err ) {';\n\tfcn += 'return false;';\n\tfcn += '}';\n\treturn (new Function( fcn ))(); // eslint-disable-line stdlib/require-globals, no-new-func\n}\n\n\n// MAIN //\n\nscope = globalScope();\n\n\n// EXPORTS //\n\nmodule.exports = scope;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n/* global window */\n\n'use strict';\n\n// MODULES //\n\nvar getGlobal = require( '@stdlib/utils-global' );\nvar IS_NODE = require( '@stdlib/assert-is-node' );\nvar globalScope = require( './global_scope.js' );\n\n\n// VARIABLES //\n\nvar Global = getGlobal();\n\n\n// MAIN //\n\n/**\n* Returns a boolean indicating if the runtime is a web browser.\n*\n* @returns {boolean} boolean indicating if runtime is a web browser\n*\n* @example\n* var bool = isBrowser();\n* // returns <boolean>\n*/\nfunction isBrowser() {\n\treturn (\n\t\t// Check that we are not running in a Node.js runtime:\n\t\tIS_NODE === false &&\n\n\t\t// Check for presence of `window` variable:\n\t\ttypeof window === 'object' &&\n\n\t\t// Check that the `window` variable matches the determined global variable:\n\t\twindow === Global &&\n\n\t\t// Check that the `window` variable is equal to the global scope:\n\t\tglobalScope === true\n\t);\n}\n\n\n// EXPORTS //\n\nmodule.exports = isBrowser;\n", "/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Boolean indicating if the runtime is a web browser.\n*\n* @module @stdlib/assert-is-browser\n*\n* @example\n* var IS_BROWSER = require( '@stdlib/assert-is-browser' );\n*\n* var bool = IS_BROWSER;\n* // returns <boolean>\n*/\n\n// MODULES //\n\nvar main = require( './main.js' );\n\n\n// MAIN //\n\nvar bool = main();\n\n\n// EXPORTS //\n\nmodule.exports = bool;\n"],
  "mappings": "uGAAA,IAAAA,EAAAC,EAAA,SAAAC,EAAAC,EAAA,cAsBA,IAAIC,EAWJ,SAASC,GAAc,CACtB,IAAIC,EAAM,GACV,OAAAA,GAAO,QACPA,GAAO,0BACPA,GAAO,oBACPA,GAAO,gBACPA,GAAO,IACC,IAAI,SAAUA,CAAI,EAAG,CAC9B,CAKAF,EAAQC,EAAY,EAKpBF,EAAO,QAAUC,ICnDjB,IAAAG,EAAAC,EAAA,SAAAC,EAAAC,EAAA,cAwBA,IAAIC,EAAY,QAAS,sBAAuB,EAC5CC,EAAU,QAAS,wBAAyB,EAC5CC,EAAc,IAKdC,EAASH,EAAU,EAcvB,SAASI,GAAY,CACpB,OAECH,IAAY,IAGZ,OAAO,QAAW,UAGlB,SAAWE,GAGXD,IAAgB,EAElB,CAKAH,EAAO,QAAUK,IC9BjB,IAAIC,EAAO,IAKPC,EAAOD,EAAK,EAKhB,OAAO,QAAUC",
  "names": ["require_global_scope", "__commonJSMin", "exports", "module", "scope", "globalScope", "fcn", "require_main", "__commonJSMin", "exports", "module", "getGlobal", "IS_NODE", "globalScope", "Global", "isBrowser", "main", "bool"]
}
